version: '3.8'

services:
  nginx:
    build:
      context: .
      dockerfile: nginx/Dockerfile
    container_name: nginx
    image: nginx:${IMAGE_TAG}
    # image: nginx:1.27.0-bookworm
    # container_name: nginx
    labels:
      - ${LABLE}
    depends_on:
      - postgres
      - backend
    ports:
      - '443:443'
    volumes:
      # - ./nginx/conf/:/etc/nginx/conf.d/
      - ./nginx/html/:/var/www/
    secrets:
      - nginx_crt
      - nginx_key
    networks:
      - transcendence
    # command: ["nginx", "-g", "daemon off;"]
    restart: always

  postgres:
    build:
      context: .
      dockerfile: postgres/Dockerfile
    container_name: postgres
    image: postgres:${IMAGE_TAG}
    # image: postgres:12.19-bookworm
    # container_name: postgres
    labels:
      - ${LABLE}
    env_file:
      - .env
    ports:
     - '5432:5432'
    volumes:
      # - ./postgres/conf/postgresql.conf:/var/lib/postgresql/data/postgresql.conf
      - db_volume:/var/lib/postgresql/data
    networks:
      - transcendence
    restart: always

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    image: backend:${IMAGE_TAG}
    labels:
      - ${LABLE}
    env_file:
      - .env
    ports:
      - '8000:8000'
    networks:
      - transcendence
    restart: always

  # backend:
  #   image: node:22.4.0-bookworm-slim
  #   container_name: backend
  #   labels:
  #     - ${LABLE}
  #   depends_on:
  #     - postgres
  #   env_file:
  #     - .env
  #   ports:
  #     - '3000:3000'
  #   working_dir: /app
  #   volumes:
  #     - ./backend/:/app
  #     # - /app/node_modules
  #   networks:
  #     - transcendence
  #   command: bash -c "npm install && node server.js"
  #   restart: always

volumes:
  db_volume:
    driver_opts:
      o: bind
      type: none
      device: ${postgres_dir}

networks:
  transcendence:
    driver: bridge

secrets:
  nginx_crt:
    file: ${ssl_dir}/${crt_name}
  nginx_key:
    file: ${ssl_dir}/${key_name}

